#!/usr/bin/env bash

COMMANDS=$(cat _application_cmds | grep "^function" | awk '{print $2}' | grep -v "^_" | tr "\n" " " )
SERVICES=$(ls stack | tr "\n" " ")
readonly STACK_FROM_INFRA="stack"
readonly CONFIG_FROM_STACK="../../../../../config/terraform"
APPLY_PLAN="apply.tfplan"
DESTROY_PLAN="destroy.tfplan"
STACK="application"

function _debug {
    echo "${SERVICE}" "${ENVIRONMENT}" "${LOCATION}" "${TFSTATESTORAGE}" "${COMMAND}"
}

function _set_remote_state {
    cd "${STACK_FROM_INFRA}/${SERVICE}" || exit
    terraform init -upgrade \
        -input=false \
        -backend=true \
        -backend-config="storage_account_name=${TFSTATESTORAGE}" \
        -backend-config="key=${LOCATION}/${ENVIRONMENT}/${STACK}/${SERVICE}/terraform.tfstate" \
        -backend-config="container_name=subscription-tfstate" \
        -backend-config="resource_group_name=azure-control-${ENVIRONMENT}-rg"
}

function get {
    _set_remote_state
    terraform get "$@"
}

function plan {
    _set_remote_state
    terraform plan \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/common.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/common.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/${LOCATION}.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/${SERVICE}.tfvars.json" \
        -out "${APPLY_PLAN}" \
        "$@"
}

function apply {
    _set_remote_state
    terraform apply "$@" "${APPLY_PLAN}"
}

function plan_destroy {
    _set_remote_state
    terraform plan -destroy \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/common.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/common.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/${LOCATION}.tfvars.json" \
        -var-file "${CONFIG_FROM_STACK}/${STACK}/vars/${SERVICE}/${ENVIRONMENT}/${SERVICE}.tfvars.json" \
        -out "${DESTROY_PLAN}" \
        "$@"
}

function destroy {
    _set_remote_state
    terraform apply "$@" "${DESTROY_PLAN}"
}

function output {
    _set_remote_state
    terraform output -json > ${SERVICE}-outputs.json
}

function show_state {
    _set_remote_state
    terraform show "$@" terraform.tfstate
}
